{"version":3,"file":"bundle.umd.min.js","sources":["../src/utils.ts","../src/index.ts"],"sourcesContent":["// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const deepCopy = (obj?: any): typeof obj => {\n  if (Array.isArray(obj)) {\n    return obj.map((_obj) => deepCopy(_obj));\n  }\n\n  if (obj && typeof obj === \"object\") {\n    return Object.fromEntries(\n      Object.entries(obj).map(([k, v]) => [k, deepCopy(v)])\n    );\n  }\n\n  return obj;\n};\n","import { deepCopy } from \"./utils\";\n\nexport type ActionType<AT, K = string | number> = {\n  id: K;\n  payload: AT;\n};\n\nexport type ReducerType<S, AT> = (\n  currentState: S,\n  action: AT\n) => typeof currentState;\n\nexport class Store<T, U> {\n  private _state: T;\n  private _reducer: ReducerType<T, U>;\n\n  constructor(reducer: ReducerType<T, U>, initState: T) {\n    this._state = initState;\n    this._reducer = reducer;\n  }\n\n  get state() {\n    return this._state;\n  }\n\n  dispatch(action: U) {\n    const stateCopy = deepCopy(this._state);\n    this._state = this._reducer(stateCopy, action);\n  }\n}\n\nexport const createStore = <T, U>(reducer: ReducerType<T, U>, initState: T) =>\n  new Store<T, U>(reducer, initState);\n"],"names":["deepCopy","obj","Array","isArray","map","_obj","Object","fromEntries","entries","_a","k","v","Store","reducer","initState","this","_state","_reducer","defineProperty","prototype","get","dispatch","action","stateCopy"],"mappings":"+OACO,IAAMA,EAAW,SAACC,GACvB,OAAIC,MAAMC,QAAQF,GACTA,EAAIG,KAAI,SAACC,GAAS,OAAAL,EAASK,EAAT,IAGvBJ,GAAsB,iBAARA,EACTK,OAAOC,YACZD,OAAOE,QAAQP,GAAKG,KAAI,SAACK,OAACC,EAACD,EAAA,GAAEE,EAACF,EAAA,GAAM,MAAA,CAACC,EAAGV,EAASW,GAAG,KAIjDV,CACT,ECDAW,EAAA,WAIE,SAAYA,EAAAC,EAA4BC,GACtCC,KAAKC,OAASF,EACdC,KAAKE,SAAWJ,CACjB,CAUH,OAREP,OAAAY,eAAIN,EAAKO,UAAA,QAAA,CAATC,IAAA,WACE,OAAOL,KAAKC,MACb,kCAEDJ,EAAQO,UAAAE,SAAR,SAASC,GACP,IAAMC,EAAYvB,EAASe,KAAKC,QAChCD,KAAKC,OAASD,KAAKE,SAASM,EAAWD,IAE1CV,CAAD,4BAE2B,SAAOC,EAA4BC,GAC5D,OAAA,IAAIF,EAAYC,EAASC,EAAzB"}